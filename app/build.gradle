import sdr.driver.cp.gradle.licenses.DependencyData
import sdr.driver.cp.gradle.licenses.PermittedLicense

apply plugin: 'sdr.driver.cp.application'
apply plugin: 'sdr.driver.cp.exposejavadependencies'
apply plugin: 'sdr.driver.cp.licenses'
apply plugin: 'kotlin-kapt'

android {
    defaultConfig {
        applicationId "sdr.driver.cp"
        versionCode 2
        versionName "1.0.1"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions 'testing'
    productFlavors {
        notTesting
        yesTesting
    }

    packagingOptions {
        pickFirst 'lib/*/libusb.so'
    }
}

licenses {
    releaseFlavor = 'notTesting'
    permittedLicenses = [
        new PermittedLicense('The Apache Software License, Version 2.0', 'Apache2'),
        new PermittedLicense('Apache 2.0', 'Apache2'),
        new PermittedLicense('The Apache License, Version 2.0', 'Apache2')
    ]
    localDependencies = [
        new DependencyData.Final("rtl-sdr", "https://osmocom.org/projects/rtl-sdr/wiki", "Gpl3"),
        new DependencyData.Final("libusb", "http://libusb.info/", "Lgpl3")
    ]
}

dependencies {
    implementation Deps.Timber
    implementation Deps.RecyclerView
    implementation "com.squareup.sqldelight:android-driver:$Versions.SQLDelight"
    implementation "androidx.constraintlayout:constraintlayout:$Versions.ConstraintLayoutNotDependingOnAppcompat"

    implementation project(':permissions:shell')
    implementation project(':permissions:shell:operations:di')
    implementation project(':permissions:shell:operations')
    implementation project(':permissions:presentation')
    implementation project(':permissions:usecases')
    implementation project(':permissions:operations')
    implementation project(':opening:shell')
    implementation project(':opening:shell:operations')
    implementation project(':opening:shell:operations:di')
    implementation project(':opening:usecases')
    implementation project(':opening:operations')
    implementation project(':common:operations')
    implementation project(':common:shell:operations')
    implementation project(':common:shell:operations:di')

    kapt Deps.DaggerProcessor
}
